key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[0 * 2 + 0] = key_in[0];
rnd[0 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((0 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(0 + 1) * 2 + 0] = key_in[0];
rnd[(0 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[2 * 2 + 0] = key_in[0];
rnd[2 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((2 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(2 + 1) * 2 + 0] = key_in[0];
rnd[(2 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[4 * 2 + 0] = key_in[0];
rnd[4 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((4 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(4 + 1) * 2 + 0] = key_in[0];
rnd[(4 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[6 * 2 + 0] = key_in[0];
rnd[6 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((6 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(6 + 1) * 2 + 0] = key_in[0];
rnd[(6 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[8 * 2 + 0] = key_in[0];
rnd[8 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((8 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(8 + 1) * 2 + 0] = key_in[0];
rnd[(8 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[10 * 2 + 0] = key_in[0];
rnd[10 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((10 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(10 + 1) * 2 + 0] = key_in[0];
rnd[(10 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[12 * 2 + 0] = key_in[0];
rnd[12 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((12 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(12 + 1) * 2 + 0] = key_in[0];
rnd[(12 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[14 * 2 + 0] = key_in[0];
rnd[14 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((14 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(14 + 1) * 2 + 0] = key_in[0];
rnd[(14 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[16 * 2 + 0] = key_in[0];
rnd[16 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((16 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(16 + 1) * 2 + 0] = key_in[0];
rnd[(16 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[18 * 2 + 0] = key_in[0];
rnd[18 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((18 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(18 + 1) * 2 + 0] = key_in[0];
rnd[(18 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[20 * 2 + 0] = key_in[0];
rnd[20 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((20 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(20 + 1) * 2 + 0] = key_in[0];
rnd[(20 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[22 * 2 + 0] = key_in[0];
rnd[22 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((22 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(22 + 1) * 2 + 0] = key_in[0];
rnd[(22 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[24 * 2 + 0] = key_in[0];
rnd[24 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((24 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(24 + 1) * 2 + 0] = key_in[0];
rnd[(24 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[26 * 2 + 0] = key_in[0];
rnd[26 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((26 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(26 + 1) * 2 + 0] = key_in[0];
rnd[(26 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[28 * 2 + 0] = key_in[0];
rnd[28 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((28 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(28 + 1) * 2 + 0] = key_in[0];
rnd[(28 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[30 * 2 + 0] = key_in[0];
rnd[30 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((30 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(30 + 1) * 2 + 0] = key_in[0];
rnd[(30 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[32 * 2 + 0] = key_in[0];
rnd[32 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((32 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(32 + 1) * 2 + 0] = key_in[0];
rnd[(32 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[34 * 2 + 0] = key_in[0];
rnd[34 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((34 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(34 + 1) * 2 + 0] = key_in[0];
rnd[(34 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[36 * 2 + 0] = key_in[0];
rnd[36 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((36 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(36 + 1) * 2 + 0] = key_in[0];
rnd[(36 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[38 * 2 + 0] = key_in[0];
rnd[38 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((38 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(38 + 1) * 2 + 0] = key_in[0];
rnd[(38 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[40 * 2 + 0] = key_in[0];
rnd[40 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((40 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(40 + 1) * 2 + 0] = key_in[0];
rnd[(40 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[42 * 2 + 0] = key_in[0];
rnd[42 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((42 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(42 + 1) * 2 + 0] = key_in[0];
rnd[(42 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[44 * 2 + 0] = key_in[0];
rnd[44 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((44 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(44 + 1) * 2 + 0] = key_in[0];
rnd[(44 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[46 * 2 + 0] = key_in[0];
rnd[46 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((46 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(46 + 1) * 2 + 0] = key_in[0];
rnd[(46 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[48 * 2 + 0] = key_in[0];
rnd[48 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((48 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(48 + 1) * 2 + 0] = key_in[0];
rnd[(48 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[50 * 2 + 0] = key_in[0];
rnd[50 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((50 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(50 + 1) * 2 + 0] = key_in[0];
rnd[(50 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[52 * 2 + 0] = key_in[0];
rnd[52 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((52 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(52 + 1) * 2 + 0] = key_in[0];
rnd[(52 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[54 * 2 + 0] = key_in[0];
rnd[54 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((54 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(54 + 1) * 2 + 0] = key_in[0];
rnd[(54 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[56 * 2 + 0] = key_in[0];
rnd[56 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((56 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(56 + 1) * 2 + 0] = key_in[0];
rnd[(56 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[58 * 2 + 0] = key_in[0];
rnd[58 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((58 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(58 + 1) * 2 + 0] = key_in[0];
rnd[(58 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[60 * 2 + 0] = key_in[0];
rnd[60 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((60 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(60 + 1) * 2 + 0] = key_in[0];
rnd[(60 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[62 * 2 + 0] = key_in[0];
rnd[62 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((62 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(62 + 1) * 2 + 0] = key_in[0];
rnd[(62 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[64 * 2 + 0] = key_in[0];
rnd[64 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((64 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(64 + 1) * 2 + 0] = key_in[0];
rnd[(64 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[66 * 2 + 0] = key_in[0];
rnd[66 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((66 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(66 + 1) * 2 + 0] = key_in[0];
rnd[(66 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[68 * 2 + 0] = key_in[0];
rnd[68 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((68 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(68 + 1) * 2 + 0] = key_in[0];
rnd[(68 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[70 * 2 + 0] = key_in[0];
rnd[70 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((70 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(70 + 1) * 2 + 0] = key_in[0];
rnd[(70 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[72 * 2 + 0] = key_in[0];
rnd[72 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((72 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(72 + 1) * 2 + 0] = key_in[0];
rnd[(72 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[74 * 2 + 0] = key_in[0];
rnd[74 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((74 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(74 + 1) * 2 + 0] = key_in[0];
rnd[(74 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[76 * 2 + 0] = key_in[0];
rnd[76 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((76 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(76 + 1) * 2 + 0] = key_in[0];
rnd[(76 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[78 * 2 + 0] = key_in[0];
rnd[78 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((78 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(78 + 1) * 2 + 0] = key_in[0];
rnd[(78 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[80 * 2 + 0] = key_in[0];
rnd[80 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((80 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(80 + 1) * 2 + 0] = key_in[0];
rnd[(80 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[82 * 2 + 0] = key_in[0];
rnd[82 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((82 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(82 + 1) * 2 + 0] = key_in[0];
rnd[(82 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[84 * 2 + 0] = key_in[0];
rnd[84 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((84 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(84 + 1) * 2 + 0] = key_in[0];
rnd[(84 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[86 * 2 + 0] = key_in[0];
rnd[86 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((86 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(86 + 1) * 2 + 0] = key_in[0];
rnd[(86 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[88 * 2 + 0] = key_in[0];
rnd[88 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((88 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(88 + 1) * 2 + 0] = key_in[0];
rnd[(88 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[90 * 2 + 0] = key_in[0];
rnd[90 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((90 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(90 + 1) * 2 + 0] = key_in[0];
rnd[(90 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[92 * 2 + 0] = key_in[0];
rnd[92 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((92 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(92 + 1) * 2 + 0] = key_in[0];
rnd[(92 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[94 * 2 + 0] = key_in[0];
rnd[94 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((94 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(94 + 1) * 2 + 0] = key_in[0];
rnd[(94 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[96 * 2 + 0] = key_in[0];
rnd[96 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((96 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(96 + 1) * 2 + 0] = key_in[0];
rnd[(96 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[98 * 2 + 0] = key_in[0];
rnd[98 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((98 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(98 + 1) * 2 + 0] = key_in[0];
rnd[(98 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[100 * 2 + 0] = key_in[0];
rnd[100 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((100 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(100 + 1) * 2 + 0] = key_in[0];
rnd[(100 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[102 * 2 + 0] = key_in[0];
rnd[102 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((102 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(102 + 1) * 2 + 0] = key_in[0];
rnd[(102 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[104 * 2 + 0] = key_in[0];
rnd[104 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((104 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(104 + 1) * 2 + 0] = key_in[0];
rnd[(104 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[106 * 2 + 0] = key_in[0];
rnd[106 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((106 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(106 + 1) * 2 + 0] = key_in[0];
rnd[(106 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[108 * 2 + 0] = key_in[0];
rnd[108 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((108 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(108 + 1) * 2 + 0] = key_in[0];
rnd[(108 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[110 * 2 + 0] = key_in[0];
rnd[110 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((110 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(110 + 1) * 2 + 0] = key_in[0];
rnd[(110 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[112 * 2 + 0] = key_in[0];
rnd[112 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((112 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(112 + 1) * 2 + 0] = key_in[0];
rnd[(112 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[114 * 2 + 0] = key_in[0];
rnd[114 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((114 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(114 + 1) * 2 + 0] = key_in[0];
rnd[(114 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[116 * 2 + 0] = key_in[0];
rnd[116 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((116 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(116 + 1) * 2 + 0] = key_in[0];
rnd[(116 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[118 * 2 + 0] = key_in[0];
rnd[118 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((118 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(118 + 1) * 2 + 0] = key_in[0];
rnd[(118 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[120 * 2 + 0] = key_in[0];
rnd[120 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((120 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(120 + 1) * 2 + 0] = key_in[0];
rnd[(120 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[122 * 2 + 0] = key_in[0];
rnd[122 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((122 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(122 + 1) * 2 + 0] = key_in[0];
rnd[(122 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[124 * 2 + 0] = key_in[0];
rnd[124 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((124 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(124 + 1) * 2 + 0] = key_in[0];
rnd[(124 + 1) * 2 + 1] = key_in[1];key_in[0] = ROL8(key_in[0], 1) + ROL8(key_in[0], 5);
key_in[1] = ROL8(key_in[1], 3) + ROL8(key_in[1], 7);
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[126 * 2 + 0] = key_in[0];
rnd[126 * 2 + 1] = key_in[1];
*key_p = ROL16(*key_p, 1) + ROL16(*key_p, 9) + ROL16(con, ((126 + 1) % 16));
tmp1 = key_in[0] + key_in[1];
tmp2 = key_in[0] ^ key_in[1];
key_in[0] = tmp1;
key_in[1] = tmp2;
rnd[(126 + 1) * 2 + 0] = key_in[0];
rnd[(126 + 1) * 2 + 1] = key_in[1];